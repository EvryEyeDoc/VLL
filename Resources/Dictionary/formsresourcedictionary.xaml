<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    <!--
    OBS: Detta är en utvecklarversion!!!
    * Textblock har en grön bakgrund, så att man ser var de finns utan att behöva skriva i dem.
    * Textboxar har stödlinje där texten börjar, så att man lättare kan justera position enligt fältets rubrik.
    * UseLayoutRounding satt till True på elementens standardstil men sedan False på Forms-stilar då element annars visas på en oexakt position i VS2013
    -->

    <!-- Used to handle Visibility.Collapsed (False) or Visibility.Visible(True) -->
    <!-- Usage: Visibility="{Binding ElementName=CheckBoxOperation1, Path=IsChecked, Converter={StaticResource BoolToVisConverter}}" -->
    <BooleanToVisibilityConverter x:Key="BoolToVisConverter"/>

    <Style TargetType="{x:Type CheckBox}">
        <Setter Property="UseLayoutRounding" Value="True"/>
        <Style.Triggers>
            <Trigger Property="IsVisible" Value="True">
                <Setter Property="UseLayoutRounding" Value="False"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style TargetType="{x:Type TextBox}">
        <Setter Property="UseLayoutRounding" Value="True"/>
        <Style.Triggers>
            <Trigger Property="IsVisible" Value="True">
                <Setter Property="UseLayoutRounding" Value="False"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style TargetType="{x:Type TextBlock}">
        <Setter Property="UseLayoutRounding" Value="True"/>
        <Style.Triggers>
            <Trigger Property="IsVisible" Value="True">
                <Setter Property="UseLayoutRounding" Value="False"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="{x:Type Rectangle}">
        <Setter Property="UseLayoutRounding" Value="True" />
        <Style.Triggers>
            <Trigger Property="IsVisible" Value="True">
                <Setter Property="UseLayoutRounding" Value="False"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style TargetType="{x:Type Ellipse}">
        <Setter Property="UseLayoutRounding" Value="True" />
        <Style.Triggers>
            <Trigger Property="IsVisible" Value="True">
                <Setter Property="UseLayoutRounding" Value="False"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style TargetType="{x:Type Line}">
        <Setter Property="UseLayoutRounding" Value="True" />
        <Style.Triggers>
            <Trigger Property="IsVisible" Value="True">
                <Setter Property="UseLayoutRounding" Value="False"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style TargetType="{x:Type Border}">
        <Setter Property="UseLayoutRounding" Value="True" />
        <Style.Triggers>
            <Trigger Property="IsVisible" Value="True">
                <Setter Property="UseLayoutRounding" Value="False"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style TargetType="{x:Type WrapPanel}">
        <Setter Property="UseLayoutRounding" Value="True" />
        <Style.Triggers>
            <Trigger Property="IsVisible" Value="True">
                <Setter Property="UseLayoutRounding" Value="False"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style TargetType="{x:Type StackPanel}">
        <Setter Property="UseLayoutRounding" Value="True" />
        <Style.Triggers>
            <Trigger Property="IsVisible" Value="True">
                <Setter Property="UseLayoutRounding" Value="False"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style TargetType="{x:Type Canvas}">
        <Setter Property="UseLayoutRounding" Value="True" />
        <Style.Triggers>
            <Trigger Property="IsVisible" Value="True">
                <Setter Property="UseLayoutRounding" Value="False"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style TargetType="{x:Type Grid}">
        <Setter Property="UseLayoutRounding" Value="True" />
        <Style.Triggers>
            <Trigger Property="IsVisible" Value="True">
                <Setter Property="UseLayoutRounding" Value="False"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style TargetType="{x:Type Path}">
        <Setter Property="UseLayoutRounding" Value="True" />
        <Style.Triggers>
            <Trigger Property="IsVisible" Value="True">
                <Setter Property="UseLayoutRounding" Value="False"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style TargetType="{x:Type Glyphs}">
        <Setter Property="UseLayoutRounding" Value="True" />
        <Style.Triggers>
            <Trigger Property="IsVisible" Value="True">
                <Setter Property="UseLayoutRounding" Value="False"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style TargetType="{x:Type InkCanvas}">
        <Setter Property="UseLayoutRounding" Value="True" />
        <Style.Triggers>
            <Trigger Property="IsVisible" Value="True">
                <Setter Property="UseLayoutRounding" Value="False"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style TargetType="{x:Type Expander}">
        <Setter Property="UseLayoutRounding" Value="True" />
        <Style.Triggers>
            <Trigger Property="IsVisible" Value="True">
                <Setter Property="UseLayoutRounding" Value="False"/>
            </Trigger>
        </Style.Triggers>
    </Style>


    <!-- In Forms built in resources. -->
    <Style x:Key="border1" TargetType="Border">
        <Setter Property="Background" Value="#fffefefe" />
        <Setter Property="BorderBrush" Value="#d0d0e0" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="CornerRadius" Value="6" />
        <Setter Property="Padding" Value="6" />
        <Setter Property="Margin" Value="0,0,0,3" />
    </Style>
    <RadialGradientBrush x:Key="brush1" GradientOrigin="0,0" Center="0.5,0.5" RadiusX="0.8" RadiusY="0.5">
        <RadialGradientBrush.GradientStops>
            <GradientStop Color="#ffffff" Offset="0" />
            <GradientStop Color="#f0f0f5" Offset="1" />
        </RadialGradientBrush.GradientStops>
    </RadialGradientBrush>
    <Style x:Key="border2" TargetType="Border">
        <Setter Property="Background" Value="{StaticResource brush1}" />
        <Setter Property="BorderBrush" Value="#d0d0e0" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="CornerRadius" Value="4" />
        <Setter Property="Padding" Value="6" />
        <Setter Property="Margin" Value="0,10,0,0" />
    </Style>
    <Style x:Key="textBlockHeader1" TargetType="TextBlock">
        <Setter Property="FontSize" Value="16" />
        <Setter Property="FontWeight" Value="Bold" />
        <Setter Property="FontFamily" Value="Segoe UI" />
        <Setter Property="Margin" Value="0,0,0,0" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="HorizontalAlignment" Value="Left" />
    </Style>
    <Style x:Key="textBlockHeader2" TargetType="TextBlock">
        <Setter Property="FontSize" Value="12" />
        <Setter Property="FontWeight" Value="Bold" />
        <Setter Property="FontFamily" Value="Segoe UI" />
        <Setter Property="Margin" Value="0,0,0,0" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="HorizontalAlignment" Value="Left" />
    </Style>
    <Style x:Key="textBlockText1" TargetType="TextBlock">
        <Setter Property="FontSize" Value="12" />
        <Setter Property="FontFamily" Value="Segoe UI" />
        <Setter Property="FontWeight" Value="Normal" />
        <Setter Property="Margin" Value="0,0,0,0" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="TextWrapping" Value="Wrap" />
        <Setter Property="HorizontalAlignment" Value="Left" />
    </Style>
    <Style x:Key="tblStyle" TargetType="TextBlock">
        <Setter Property="FontSize" Value="12"/>
        <Setter Property="FontFamily" Value="Verdana"/>
        <Setter Property="FontWeight" Value="Normal"/>
        <Setter Property="Margin" Value="4,0,0,4"/>
        <Setter Property="Padding" Value="0"/>
        <Setter Property="Background" Value="#3344FF55"/>
        <Setter Property="HorizontalAlignment" Value="Left"/>
        <Setter Property="UseLayoutRounding" Value="False"/>
    </Style>
    <Style x:Key="tbStyle" TargetType="TextBoxBase">
        <Setter Property="Foreground" Value="Black"/>
        <Setter Property="FontSize" Value="12"/>
        <Setter Property="FontFamily" Value="Verdana"/>
        <Setter Property="FontWeight" Value="Normal"/>
        <Setter Property="Margin" Value="0"/>
        <Setter Property="Padding" Value="0"/>
        <Setter Property="Background" Value="#e0eaff"/>
        <Setter Property="UseLayoutRounding" Value="False"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBoxBase}">
                    <Border UseLayoutRounding="True" x:Name="border" CornerRadius="2" Background="{TemplateBinding Background}" BorderThickness="{TemplateBinding BorderThickness}"
        BorderBrush="{TemplateBinding BorderBrush}">
                        <Grid x:Name="grid" UseLayoutRounding="True">
                            <Canvas>
                                <Path Data="F0 M3.17,-16 4.32,-16 4.32,12.06 -16,12.06 -16,11.75 3.17,11.75z  M3.47,-15.7 4.02,-15.7 4.02,11.75,3.47,11.75" Fill="#22000088" />
                                <Path Data="F0 m-1,11.75 0,-0.5 0.2,0.5z m-1,0 0,-0.5 0.2,0.5z m-1,0 0,-0.5 0.2,0.5z m-1,0 0,-0.5 0.2,0.5z m-1,0 0,-0.5 0.2,0.5z m-1,0 0,-0.5 0.2,0.5z m-1,0 0,-0.5 0.2,0.5z m-1,0 0,-0.5 0.2,0.5z m-1,0 0,-0.5 0.2,0.5z m-1,0 0,-0.5 0.2,0.5z m-1,0 0,-0.5 0.2,0.5z m-1,0 0,-0.5 0.2,0.5z m-1,0 0,-0.5 0.2,0.5z m-1,0 0,-0.5 0.2,0.5z m-1,0 0,-0.5 0.2,0.5z m-1,0 0,-0.5 0.2,0.5z" Fill="#22000088" />
                            </Canvas>
                            <AdornerDecorator x:Name="PART_ContentHost" Focusable="False" UseLayoutRounding="True" />
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsVisible" Value="True">
                            <Setter TargetName="border" Property="UseLayoutRounding" Value="False" />
                            <Setter TargetName="grid" Property="UseLayoutRounding" Value="False" />
                            <Setter TargetName="PART_ContentHost" Property="UseLayoutRounding" Value="False" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="Validation.HasError" Value="true">
                <Setter Property="Foreground" Value="Red"/>
                <Setter Property="ToolTip" Value="{Binding RelativeSource={RelativeSource Self}, Path=(Validation.Errors)[0].ErrorContent}"/>
            </Trigger>
            <Trigger Property="IsFocused" Value="True">
                <Setter Property="Background" Value="#ffffaa"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="cbStyle" TargetType="{x:Type CheckBox}">
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Foreground" Value="Transparent" />
        <Setter Property="Margin" Value="0.5" />
        <Setter Property="UseLayoutRounding" Value="False"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type CheckBox}">
                    <BulletDecorator Background="#e0eaff">
                        <BulletDecorator.Bullet>
                            <Grid>
                                <Rectangle x:Name="OuterRectangle" Fill="{TemplateBinding Background}" />
                                <Path VerticalAlignment="Center" HorizontalAlignment="Center" x:Name="Checkmark" Fill="Black" Visibility="Hidden" Data="M 1 5 L -0.5 5.8 L 3.75 11 L 12.0 1.5 L 11.5 1 L 3.75 8 Z">
                                    <Path.RenderTransform>
                                        <TransformGroup>
                                            <ScaleTransform ScaleX="1.0" ScaleY="1.5" />
                                            <TranslateTransform X="0" Y="-3.75" />
                                        </TransformGroup>
                                    </Path.RenderTransform>
                                </Path>
                            </Grid>
                        </BulletDecorator.Bullet>
                    </BulletDecorator>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="OuterRectangle" Property="Fill" Value="#eaeaea" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="Checkmark" Property="Fill" Value="Black" />
                        </Trigger>
                        <Trigger Property="IsFocused" Value="True">
                            <Setter TargetName="Checkmark" Property="Fill" Value="Black" />
                            <Setter TargetName="OuterRectangle" Property="Fill" Value="#ffffaa" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="Checkmark" Property="Visibility" Value="Visible" />
                            <Setter TargetName="Checkmark" Property="Fill" Value="Black" />
                        </Trigger>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="Checkmark" Property="Visibility" Value="Visible" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>